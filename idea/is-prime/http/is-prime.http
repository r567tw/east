GET http://localhost:8000/api/is-prime?number=7

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });

    client.test("Response content-type is json", function () {
        client.assert(
            response.contentType.mimeType === "application/json",
            "Expected 'application/json' but received '" + response.contentType.mimeType + "'");
    });

    client.test("Response body is correct", function () {
        const body = JSON.stringify(response.body);
        const expect = JSON.stringify({
            "number": 7,
            "isPrime": true
        });
        client.assert(
            body === expect,
            "received wrong body'" + body + "'"
        );
    });
%}

###

GET http://localhost:8000/api/is-prime?number=81

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });

    client.test("Response content-type is json", function () {
        const type = response.contentType.mimeType;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
    });

    client.test("Response body is correct", function () {
        const body = JSON.stringify(response.body);
        const expect = JSON.stringify({
            "number": 81,
            "isPrime": false
        });
        client.assert(
            body === expect,
            "received wrong body'" + body + "'"
        );
    });
%}

###

GET http://localhost:8000/api/is-prime?number=0

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 422, "Response status is not 200");
    });

    client.test("Response content-type is json", function () {
        const type = response.contentType.mimeType;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
    });

    client.test("Response body is correct", function () {
        const body = JSON.stringify(response.body);
        const expect = JSON.stringify({
            "error": "Missing or invalid 'number' parameter."
        });
        client.assert(
            body === expect,
            "received wrong body'" + body + "'"
        );
    });
%}

