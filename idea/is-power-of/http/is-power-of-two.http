GET http://localhost:8000/api/is-power-of-two?number=16

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });

    client.test("Response content-type is json", function () {
        const type = response.contentType.mimeType;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
    });

    client.test("Response body is correct", function () {
        const body = JSON.stringify(response.body);
        const expect = JSON.stringify({
            "number": 16,
            "isPowerOfTwo": true
        });
        client.assert(
            body === expect,
            "received wrong body'" + body + "'"
        );
    });
%}

### 1.0.0 test 2 with false answer
GET http://localhost:8000/api/is-power-of-two?number=18

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });

    client.test("Response content-type is json", function () {
        const type = response.contentType.mimeType;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
    });

    client.test("Response body is correct", function () {
        const body = JSON.stringify(response.body);
        const expect = JSON.stringify({
            "number": 18,
            "isPowerOfTwo": false
        });
        client.assert(
            body === expect,
            "received wrong body'" + body + "'"
        );
    });
%}

### 1.0.0 test 3 with zero
GET http://localhost:8000/api/is-power-of-two?number=0

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });

    client.test("Response content-type is json", function () {
        const type = response.contentType.mimeType;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
    });

    client.test("Response body is correct", function () {
        const body = JSON.stringify(response.body);
        const expect = JSON.stringify({
            "number": 0,
            "isPowerOfTwo": false
        });
        client.assert(
            body === expect,
            "received wrong body'" + body + "'"
        );
    });
%}
